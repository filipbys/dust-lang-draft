@import url(Modules.css);
@import url(Windows.css);

/* TODO split into more files */

body {
  background: #737f8d;
  font-family: monospace;
}

#debug-input-box {
  display: inline-block;
  white-space: pre;
  text-align: start;
  border: 1px solid black;
  border-radius: 4px;
  padding: 5px;
}

#app {
  background: #fff;
  padding: 20px;
}

#editor-container {
  padding: 10px;
  display: inline-flex;
  justify-items: normal;
  gap: 5px;
}

.Dust.function-gap {
  width: 0.5ch;
}

.Dust.array {
  display: inline-flex;
  flex-wrap: nowrap;
  align-items: stretch;
  justify-content: center;
  gap: 2px;
  padding: 1px;
  margin: 2px;
}

.Dust.vertical.array {
  flex-direction: column;
}

.Dust.array > .Dust {
  outline: 2px solid black;
  border-radius: 0;
  margin: 0px;
  display: inline-flex;
  align-items: center;
}

.Dust.array > .Dust:not(.functionCall) {
  padding-inline: 0.5ch;
  background: unset;
}

.Dust.functionCall {
  display: inline-flex;
  flex-wrap: nowrap;
  padding: 0.5ch;
  align-items: center;
  font-family: monospace;
  background: rgba(0, 0, 0, 0.1);
  border-radius: 8px;
  flex-shrink: 0;
}

.Dust.array > .functionCall {
  margin: 0;
  margin-inline: 0;
  padding: 2px;
}

.Dust.function-parameters {
  display: inline-flex;
  flex-wrap: nowrap;
  align-items: center;
  gap: 1ch;
  white-space: nowrap;
}

.Dust.binary-operation-chain-item {
  flex-shrink: 0;
  flex-wrap: nowrap;
}

/* TODO make .vertical the default and use .single-line : */
.Dust.vertical.functionCall {
  flex-direction: column;
  align-items: start;
  gap: 0.5ch;
}

.Dust.functionCall:not(.vertical)
  > :is(.identifier + :not(.identifier), .Dust:not(.identifier) + .identifier) {
  margin-inline-start: 0.5ch;
}

.Dust.vertical.binary.functionCall {
  display: inline-grid;
  grid-template-columns: auto auto;
  align-items: center;
  justify-items: start;
}

.Dust.vertical.binary.singleColumn.functionCall {
  grid-template-columns: auto;
  gap: 0px;
}

.Dust.vertical.binary.functionCall:not(.centered, .singleColumn)
  > :first-child {
  grid-column-start: 1;
  grid-column-end: 3;
}

.Dust.vertical.binary.functionCall:not(.centered, .singleColumn)
  > .Dust.function {
  justify-self: end;
}

.Dust.vertical.binary.functionCall.centered {
  grid-template-columns: auto;
  justify-items: center;
  gap: 0px;
}

.Dust.vertical.binary.functionCall.valueDeclaration {
  grid-template-columns: auto;
  border-radius: 8px;
  padding: 0px;
  justify-items: start;
  margin: 2px;
}

.Dust.vertical.binary.functionCall.valueDeclaration:not(:hover) {
  outline: 2px solid black;
}

.Dust.vertical.binary.functionCall.valueDeclaration1Column {
  grid-template-columns: auto;
  border-radius: 8px;
  padding: 0px;
  justify-items: center;
  margin: 2px;
}

.Dust.vertical.binary.functionCall.valueDeclaration1Column:not(:hover) {
  outline: 2px solid black;
}

.Dust.vertical.binary.functionCall.valueDeclaration1Column > :first-child {
  grid-column-start: unset;
  grid-column-end: unset;
}

.Dust.vertical.centered > .Dust.scopeOperator {
  transform: rotate(90deg);
}

#if-expression-examples {
  display: inline-flex;
  justify-items: start;
  align-items: start;
  gap: 10px;
  flex-wrap: wrap;
  padding: 5px;
}

.Dust.functionCall.ifExpression4Columns {
  display: inline-grid;
  grid-template-columns: auto auto auto auto;
  align-items: center;
  justify-items: start;
}

.Dust.functionCall.ifExpression3Columns {
  display: inline-grid;
  grid-template-columns: auto auto auto;
  align-items: center;
  justify-items: start;
}

.Dust.functionCall.ifExpression3Columns > :first-child {
  grid-column-start: 1;
  grid-column-end: 4;
}

.Dust.functionCall.matchExpression {
  display: inline-grid;
  grid-template-columns: auto auto auto auto;
  align-items: center;
  justify-items: start;
}

/* .Dust.functionCall.matchExpression>:first-child {
    grid-column-start: 1;
    grid-column-end: 5;
} */

.Dust.vertical > .function-parameters {
  flex-direction: column;
  align-items: start;
  gap: 4px;
}

.Dust.identifier {
  border-radius: 4px;
  flex-shrink: 0;
  padding-inline: 0.5ch;
  padding-block: 0.25ch;
}

.Dust.function {
  font-weight: bold;
}

.Dust.functionCall:hover,
.Dust.identifier:hover,
.Dust.array > .Dust:hover {
  outline: 2px solid rgb(140, 140, 255);
  z-index: 1;
}

.Dust:focus {
  z-index: 1;
}

.Dust.array > .Dust:focus {
  outline: auto;
}

.Dust.new-name {
  font-style: italic;
}

.Dust.new-function-name {
  font-style: italic;
  font-weight: bold;
}

.Dust.functionCall.functionExpression {
  border: 2px solid rgba(0, 0, 0, 0.65);
  /* 		margin: 0; */
}

.Dust.block {
  display: inline grid;
  flex-direction: column;
  padding: 5px;
  /* border: 1px solid black; */
  gap: 1px;
  justify-items: stretch;
}

.Dust.blockLine {
  outline: 1px solid black;
  padding: 5px;
  background-color: rgba(0, 0, 0, 0.1);
}

.Dust.blockLine:first-child {
  border-radius: 4px 4px 0px 0px;
}

.Dust.blockLine:last-child {
  border-radius: 0px 0px 4px 4px;
}

.Dust.blockLine.label {
  /* border: 1px solid black; */
  justify-self: start;
}

.Dust.blockLine.label > .Dust {
  font-size: larger;
  font-weight: bold;
}

.Dust.comment {
  display: inline-block;
  color: grey;
  background-color: rgba(255, 255, 0, 0.3);
  outline: 2px solid rgba(230, 230, 0, 1);
  /* padding-inline: 8px;
    padding-block: 4px; */
  padding: 2px;
}
